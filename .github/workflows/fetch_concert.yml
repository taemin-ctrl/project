name: Fetch Concert Crawling and Send Email

# Controls when the workflow will run
on:
  schedule:
    - cron: "*/5 * * * *"  # 매 5분마다 실행
  workflow_dispatch:  # 수동 실행 가능
  push:
    branches: 
      - main

jobs:
  fetch_concert:
    runs-on: ubuntu-latest

    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v3  # 저장소를 체크아웃하는 action 사용

      - name: Python 설정
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      
      - name: 필요한 패키지 설치
        run: |
            pip install --no-cache-dir selenium
            pip install --no-cache-dir pandas
            pip install --no-cache-dir dotenv

      - name: access to secrets
        run: |
          # 시크릿 값을 환경 변수로 파일에 저장
          echo "EMAIL_ADDRESS=$EMAIL_ADDRESS" >> .env
          echo "EMAIL_PASSWORD=$EMAIL_PASSWORD" >> .env
          echo "YOUR_ADDRESS=$YOUR_ADDRESS" >> .env

      - name: 시크릿 값 로깅 (디버깅)
        run: |
          echo "Checking if secrets are loaded..."
          if [ -z "$EMAIL_ADDRESS" ]; then
            echo "EMAIL_ADDRESS is not set"
          else
            echo "EMAIL_ADDRESS is loaded"
          fi
          if [ -z "$EMAIL_PASSWORD" ]; then
            echo "EMAIL_PASSWORD is not set"
          else
            echo "EMAIL_PASSWORD is loaded"
          fi
          if [ -z "$YOUR_ADDRESS" ]; then
            echo "YOUR_ADDRESS is not set"
          else
            echo "YOUR_ADDRESS is loaded"
          fi
        env: 
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          YOUR_ADDRESS: ${{ secrets.YOUR_ADDRESS }}

      - name: 파이썬 실행
        run: python concert_script.py
        env: 
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          YOUR_ADDRESS: ${{ secrets.YOUR_ADDRESS }}

      - name: 변경 사항 커밋 및 푸시
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          
          # 변경 사항이 있을 경우에만 커밋
          git diff --exit-code || git commit -am "Update concert data (auto)"
          
          # GITHUB_TOKEN을 사용하여 푸시
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
